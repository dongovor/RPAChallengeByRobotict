<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="801,2655" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="418,2590" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="https://www.bbcgoodfood.com/" Name="strBaseUrl" />
      <Variable x:TypeArguments="x:String" Name="strUserRequest" />
      <Variable x:TypeArguments="x:String" Name="strHttpResponse" />
      <Variable x:TypeArguments="x:Int32" Name="intStatucCode" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="intRetryCounter" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listNames" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listLinks" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesLinks" />
      <Variable x:TypeArguments="x:String" Name="strUserInput" />
      <Variable x:TypeArguments="x:String" Default="search?q=;recipes/" Name="strRequestTypes" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listIngredients" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listSteps" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="init" sap:VirtualizedContainerService.HintSize="376,551" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BuildDataTable DataTable="[dtOutput]" DisplayName="Build Data Table dtOutput" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Ingredients&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Steps&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
      <Assign DisplayName="Assign init listIngredients" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listIngredients]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign init listSteps" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listSteps]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign init listNames" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listNames]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign init listLinks" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listLinks]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="wait for input and get links" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[String.IsNullOrEmpty(strUserRequest)]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
        <ui:InterruptibleDoWhile.Body>
          <Sequence DisplayName="ask for input or fail after 10 retries" sap:VirtualizedContainerService.HintSize="549,1061" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog ask for dish name" sap:VirtualizedContainerService.HintSize="507,242" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please enter the name of the dish for which you want to find the recipe" Title="Enter dish name">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[strUserRequest]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <If Condition="[string.IsNullOrEmpty(strUserRequest)]" DisplayName="If input isempty -&gt; retry counter ++" sap:VirtualizedContainerService.HintSize="507,219" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Assign DisplayName="Assign intRretryCounter++" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intRetryCounter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intRetryCounter + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
              </If.Else>
            </If>
            <If Condition="[intRetryCounter.Equals(11)]" DisplayName="If intRetryCounter == 11 -&gt; throw exception" sap:VirtualizedContainerService.HintSize="507,428" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence DisplayName="Msg box&amp;exception" sap:VirtualizedContainerService.HintSize="376,239" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;User input cannot be empty.&quot;]" />
                  <Throw DisplayName="Throw SE" Exception="[new System.Exception(&quot;User input cannot be empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ui:InterruptibleDoWhile.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleDoWhile>
      <Assign DisplayName="Assign replace spaces in user input" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strUserRequest]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[strUserRequest.Replace(" ", "+")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request get all recipies" EnableSSLVerification="True" EndPoint="[String.Format(&quot;{0}{1}{2}&quot;,&#xA;&#x9;strBaseUrl,&#xA;&#x9;strRequestTypes.Split(&quot;;&quot;c).First,&#xA;&#x9;strUserRequest&#xA;)]" sap:VirtualizedContainerService.HintSize="334,58" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Password="[Nothing]" Result="[strHttpResponse]" StatusCode="[intStatucCode]" TimeoutMS="60000" Username="[Nothing]">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Cookies>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Cookies>
        <ui:HttpClient.Headers>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <Assign DisplayName="Assign remove all \t\n\r" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strHttpResponse]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Join(" ", strHttpResponse.Split({Environment.Newline}, StringSplitOptions.RemoveEmptyEntries))]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:Matches BuilderPattern="(?&lt;=standard-card-new__article-title qa-card-link\&quot;\shref=\&quot;)(.*)(?=\&quot;&gt;)" DisplayName="Matches get links parts" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[strHttpResponse]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=standard-card-new__article-title qa-card-link\\\&quot;\\shref=\\\&quot;)(.*)(?=\\\&quot;&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=standard-card-new__article-title qa-card-link\&quot;\shref=\&quot;)(.*)(?=\&quot;&gt;)" RegexOption="IgnoreCase, Compiled" Result="[matchesLinks]" />
      <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" DisplayName="For Each linkPart in matchesLinks" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[matchesLinks]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="str:Match">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="str:Match" Name="linkPart" />
            </ActivityAction.Argument>
            <If Condition="[listNames.count.Equals(5)]" DisplayName="If listnames count = 5 -&gt; break" sap:VirtualizedContainerService.HintSize="487,336" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_3" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Add name/link" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <AddToCollection x:TypeArguments="x:String" Collection="[listNames]" DisplayName="Add To Collection(name)" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[StrConv(linkPart.ToString.Split(&quot;/&quot;c).Last.ToString.Replace(&quot;-&quot;, &quot; &quot;), VbStrConv.ProperCase)]" />
                  <AddToCollection x:TypeArguments="x:String" Collection="[listLinks]" DisplayName="Add To Collection(link)" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[linkPart.ToString]" />
                </Sequence>
              </If.Else>
            </If>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="376,296" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Please choose the dish" OptionsString="[String.Join(&quot;;&quot;, listNames)]" Title="Please choose the dish">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[strUserInput]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="376,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[listLinks.AsEnumerable().Where(Function(li) li.Contains(strUserInput.ToLowerInvariant.Replace(&quot; &quot;, &quot;-&quot;))).First]" />
    <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request get recipe page content" EnableSSLVerification="True" EndPoint="[String.Format(&#xA;&#x9;&quot;{0}{1}{2}&quot;,&#xA;&#x9;strBaseUrl,&#xA;&#x9;strRequestTypes.Split(&quot;;&quot;c).Last,&#xA;&#x9;listLinks.AsEnumerable().Where(Function(li) li.Contains(strUserInput.ToLowerInvariant.Replace(&quot; &quot;, &quot;-&quot;))).First&#xA;)]" sap:VirtualizedContainerService.HintSize="376,58" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Result="[strHttpResponse]" StatusCode="[intStatucCode]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <Assign DisplayName="Assign remove all \t\n\r" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strHttpResponse]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Join(" ", strHttpResponse.Split({Environment.Newline}, StringSplitOptions.RemoveEmptyEntries))]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="prepare ingredients" sap:VirtualizedContainerService.HintSize="376,344" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesResult" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:Matches BuilderPattern="(?:(?&lt;=&lt;li class=\&quot;pb-xxs pt-xxs list-item list-item--separator\&quot;&gt;)(.*?)(?=&lt;\/li&gt;|\Z))?" DisplayName="Matches ingredients" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[strHttpResponse]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=&lt;li class=\\\&quot;pb-xxs pt-xxs list-item list-item--separator\\\&quot;&gt;)(.*?)(?=&lt;\\\/li&gt;|\\Z)&quot;,&quot;QuantifierFirstValue&quot;:&quot;?&quot;,&quot;QuantifierID&quot;:&quot;ZOO&quot;,&quot;QuantifierName&quot;:&quot;Zero or one&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?:(?&lt;=&lt;li class=\&quot;pb-xxs pt-xxs list-item list-item--separator\&quot;&gt;)(.*?)(?=&lt;\/li&gt;|\Z))?" RegexOption="IgnoreCase, Compiled" Result="[matchesResult]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:Matches>
      <Assign DisplayName="Assign remove empty strings from match result" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:IEnumerable(str:Match)">[matchesResult]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:IEnumerable(str:Match)">[matchesResult.AsEnumerable().Where(Function(mi) Not String.IsNullOrEmpty(mi.Value))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign fill up ingredients list" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listIngredients]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[matchesResult.AsEnumerable().Select(Function(mi) System.Text.RegularExpressions.Regex.Replace(mi.Groups(0).Value, "&lt;!-- --&gt;", "")).ToList]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="prepare steps" sap:VirtualizedContainerService.HintSize="376,574" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesResult" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:Matches BuilderPattern="(?&lt;=&lt;div class=\&quot;editor-content\&quot;&gt;&lt;p&gt;)(.*)(?=&lt;\/div&gt;)" DisplayName="Matches steps &gt;&gt; raw" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_4" Input="[strHttpResponse]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=&lt;div class=\\\&quot;editor-content\\\&quot;&gt;&lt;p&gt;)(.*)(?=&lt;\\\/div&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=&lt;div class=\&quot;editor-content\&quot;&gt;&lt;p&gt;)(.*)(?=&lt;\/div&gt;)" RegexOption="IgnoreCase, Compiled" Result="[matchesResult]" />
      <ui:Matches BuilderPattern="(?:&lt;\s*p[^&gt;]*&gt;([^&lt;]*)&lt;\s*\/\s*p\s*&gt;)*" DisplayName=" Matches steps filter &quot;raw&quot; results" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_5" Input="[strHttpResponse]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;&lt;\\s*p[^&gt;]*&gt;([^&lt;]*)&lt;\\s*\\\/\\s*p\\s*&gt;&quot;,&quot;QuantifierFirstValue&quot;:&quot;*&quot;,&quot;QuantifierID&quot;:&quot;ANY&quot;,&quot;QuantifierName&quot;:&quot;Any (0 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?:&lt;\s*p[^&gt;]*&gt;([^&lt;]*)&lt;\s*\/\s*p\s*&gt;)*" RegexOption="IgnoreCase, Compiled" Result="[matchesResult]" />
      <Assign DisplayName="Assign remove empty strings from match result" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:IEnumerable(str:Match)">[matchesResult]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:IEnumerable(str:Match)">[matchesResult.AsEnumerable().Where(Function(mi) Not String.IsNullOrEmpty(mi.Value))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign fill up steps list" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[listSteps]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[matchesResult.AsEnumerable().Select(Function(mi) mi.Groups(0).Value.Replace("&lt;!-- --&gt;", "").Replace("&lt;p&gt;", "").Replace("&lt;/p&gt;", "")).ToList]</InArgument>
        </Assign.Value>
      </Assign>
      <RemoveFromCollection x:TypeArguments="x:String" Collection="[listSteps]" DisplayName="Remove steps first" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[listSteps.First]" />
      <RemoveFromCollection x:TypeArguments="x:String" Collection="[listSteps]" DisplayName="Remove From Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_2" Item="[listSteps.Last]" />
    </Sequence>
    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File recipe file" FileName="[String.Format(&quot;{0}.txt&quot;, strUserInput)]" sap:VirtualizedContainerService.HintSize="376,134" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[String.Format(&#xD;&#xA;&#x9;&quot;{0}{1}{1}Ingredients:{1}{2}{1}{1}Steps:{1}{3}&quot;,&#xD;&#xA;&#x9;strUserInput,&#xD;&#xA;&#x9;Environment.NewLine,&#xD;&#xA;&#x9;String.Join(Environment.NewLine, listIngredients),&#xD;&#xA;&#x9;String.Join(Environment.NewLine, listSteps)&#xD;&#xA;)]" />
  </Sequence>
</Activity>