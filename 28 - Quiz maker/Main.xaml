<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_Guid="de2cc9fc-8254-4858-be8f-bebf06a78ee2" this:Main.in_PathToEncryptedFile="input\QuizQuestions.encrypted" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:uca="clr-namespace:UiPath.Cryptography.Activities;assembly=UiPath.Cryptography.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Used to encrypt questions file" Name="in_Guid" Type="InArgument(x:String)" />
    <x:Property Name="in_PathToEncryptedFile" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>602,2246</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Cryptography</x:String>
      <x:String>System.Text</x:String>
      <x:String>UiPath.Cryptography.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="IMPORTANT!!!&#xD;&#xA;0. If you will use provided questions file: input\QuizQuestions.encrypted then just launch the bot in other case(new quiz file) process to steps 1-3:&#xD;&#xA;1. Prepare questions file according to next template: Some question (answer1; answer2; `correctAnswer). IMPORTANT: Mark correct answer with ` (Grave accent/HTML Code: &amp;#96;) placed at the start of the word; &#xD;&#xA;2. Save questions file with txt extension and place it inside input folder;&#xD;&#xA;3. Uncomment &quot;prepare questions file&quot; activity and launch the bot." DisplayName="quiz maker main" sap:VirtualizedContainerService.HintSize="480,1980" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch quiz maker" sap:VirtualizedContainerService.HintSize="438,1756" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="quiz maker" sap:VirtualizedContainerService.HintSize="382,1529" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strDecryptedFileName">
              <Variable.Default>
                <Literal x:TypeArguments="x:String">input\QuizQuestions</Literal>
              </Variable.Default>
            </Variable>
            <Variable x:TypeArguments="x:String" Name="strInputText" />
            <Variable x:TypeArguments="scg:List(x:String)" Name="listQuestions" />
            <Variable x:TypeArguments="x:Int32" Name="intQCounter" />
            <Variable x:TypeArguments="x:Int32" Name="intAnswerCounter" />
            <Variable x:TypeArguments="s:Random" Name="rnd">
              <Variable.Default>
                <mva:VisualBasicValue x:TypeArguments="s:Random" ExpressionText="new Random()" />
              </Variable.Default>
            </Variable>
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut DisplayName="prepare questions file" sap:VirtualizedContainerService.HintSize="340,51" sap2010:WorkflowViewState.IdRef="CommentOut_4">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,220" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <uca:EncryptFile Algorithm="AESGCM" DisplayName="Encrypt File" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="EncryptFile_2" InputFilePath="[Directory.GetFiles(&quot;input&quot;, &quot;*.txt&quot;).First]" Key="[in_Guid]" KeyEncoding="[System.Text.Encoding.UTF8]" OutputFilePath="[String.Format(&quot;{0}\input\QuizQuestions.encrypted&quot;, Directory.GetCurrentDirectory)]" Overwrite="True" />
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <uca:DecryptFile Algorithm="AESGCM" DisplayName="Decrypt Quiz File" sap:VirtualizedContainerService.HintSize="340,51" sap2010:WorkflowViewState.IdRef="DecryptFile_1" InputFilePath="[in_PathToEncryptedFile]" Key="[in_Guid]" KeyEncoding="[System.Text.Encoding.UTF8]" OutputFilePath="[strDecryptedFileName]" Overwrite="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </uca:DecryptFile>
          <ui:ReadTextFile Content="[strInputText]" DisplayName="Read Text File decrypted file" FileName="[strDecryptedFileName]" sap:VirtualizedContainerService.HintSize="340,51" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadTextFile>
          <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete(decrypted file)" sap:VirtualizedContainerService.HintSize="340,51" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[strDecryptedFileName]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:Delete>
          <ui:MultipleAssign DisplayName="Multiple Assign(init vars)" sap:VirtualizedContainerService.HintSize="340,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="scg:List(x:String)">[listQuestions]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="scg:List(x:String)">[strInputText.Split({Environment.NewLine},StringSplitOptions.RemoveEmptyEntries).ToList]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[intQCounter]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[intAnswerCounter]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:InterruptibleDoWhile DisplayName="Do Ask questions While there is some questions in list)" sap:VirtualizedContainerService.HintSize="340,774" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
            <ui:InterruptibleDoWhile.Body>
              <Sequence DisplayName="ask questions" sap:VirtualizedContainerService.HintSize="304,609" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="idx" />
                  <Variable x:TypeArguments="x:String" Name="strResponse" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign reassign idx" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[idx]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[new Random().Next(0, listQuestions.Count - 1)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog(show q and get answer)" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="[System.Text.RegularExpressions.Regex.Replace(listQuestions(idx), &quot;\((.*?)\)&quot;, new String(&quot;_&quot;C, System.Text.RegularExpressions.Regex.Matches(listQuestions(idx), &quot;\((.*?)\)&quot;)(0).Value.Length))]" OptionsString="[String.Join(&quot;; &quot;, System.Text.RegularExpressions.Regex.Replace(System.Text.RegularExpressions.Regex.Matches(listQuestions(idx), &quot;\((.*?)\)&quot;)(0).Value, &quot;[\(\)\`]&quot;, &quot;&quot;).Split(&quot;;&quot;c).ToArray.OrderBy(Function() rnd.Next))]" Title="[String.Format(&quot;Quiz question no. {0}&quot;, intQCounter)]">
                  <ui:InputDialog.Result>
                    <OutArgument x:TypeArguments="x:String">[strResponse]</OutArgument>
                  </ui:InputDialog.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InputDialog>
                <If Condition="[strResponse.Trim.ToLowerInvariant.Equals(System.Text.RegularExpressions.Regex.Matches(listQuestions(idx), &quot;\`\w+&quot;)(0).Value.Replace(&quot;`&quot;, &quot;&quot;).trim.ToLowerInvariant)]" DisplayName="If correct answer-&gt;inc counter" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign DisplayName="Assign inc answer counter" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[intAnswerCounter]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[intAnswerCounter + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="262,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="RemoveAt">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="scg:List(x:String)">[listQuestions]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:Int32">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="idx" />
                  </InArgument>
                </InvokeMethod>
                <Assign DisplayName="Assign inc question counter" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intQCounter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intQCounter + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:InterruptibleDoWhile.Body>
            <ui:InterruptibleDoWhile.Condition>
              <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="listQuestions.Count &gt; 0" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
            </ui:InterruptibleDoWhile.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InterruptibleDoWhile>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box show final result" sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[String.Format(&quot;Your score is: {0}&quot;, intAnswerCounter)]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message(fatal)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Fatal" Message="[String.Format(&quot;Unexpected error occured during the execution. Exception: {0}&quot;, exception.Message)]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>